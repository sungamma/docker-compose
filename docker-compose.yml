---
version: "3.2"

services:
  sonarr3:
    image: linuxserver/sonarr
    container_name: sonarr3
    # port is 8989
    privileged: True
    restart: unless-stopped
    volumes:
      - /volume1/docker/sonarr:/config
      - /volume1/movie:/volume1/movie
    network_mode: host
    environment:
      - PUID=1027  # ssh    id id
      - PGID=100
      - TZ=Asia/Shanghai
      - UMASK=022


  radarr3:
    image: linuxserver/radarr:nightly
    container_name: radarr3
    # port is 7878
    privileged: True
    restart: unless-stopped
    volumes:
      - /volume1/docker/radarr:/config
      - /volume1/movie:/volume1/movie
    network_mode: host
    environment:
      - PUID=1027
      - PGID=100
      - TZ=Asia/Shanghai
      - UMASK=022


  prowlarr3:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr3
    # port is 9696
    privileged: True
    restart: unless-stopped
    volumes:
      - /volume1/docker/prowlarr:/config
      - /volume1/movie:/volume1/movie
    network_mode: host
    environment:
      - PUID=1027
      - PGID=100
      - TZ=Asia/Shanghai
      - UMASK=022


  jackett:
    image: linuxserver/jackett:latest
    # port is 9117
    privileged: True
    restart: unless-stopped
    volumes:
      - /volume1/docker/jackett:/config
    network_mode: host
    container_name: jackett1
    environment:
      - PUID=1027
      - PGID=100
      - TZ=Asia/Shanghai
      - UMASK=022


  organizr:
    image: organizr/organizr:latest
    container_name: organizr1
    privileged: True
    volumes:
      - /volume1/docker/organizr:/config
    environment:
      - PUID=1027
      - PGID=100
      - TZ=Asia/Shanghai
      - UMASK=022
    ports:
      - 8255:80  #没办法用host,不知道怎么改默认端口，只能bridge
    restart: unless-stopped
    networks:
      mynet:
        ipv4_address: 172.18.0.4
        
        
  jellyfinQSV:
    image: nyanmisaka/jellyfin  # 解决了硬解码与字体问题，中国特供版
    container_name: jellyfin1
    # port is 8096
    privileged: true
    network_mode: host
    environment:
      - PUID=1027
      - PGID=100
      - TZ=Asia/Shanghai
      - HTTP_PROXY=127.0.0.1:8019  #代理
      - HTTPS_PROXY=127.0.0.1:8019   #代理
      - NO_PROXY=localhost,127.0.0.1
    volumes:
      - /volume1/docker/jellyfinQSV/config:/config
      - /volume1/docker/jellyfinQSV/cache:/cache
      - /volume1/movie:/volume1/movie
      - /volume2/movie2:/volume2/movie2
    restart: unless-stopped


  nas-tools:
    image: sungamma/nas-tools:latest
    container_name: nas-tools1
# port is 3000     
    volumes:
      - /volume1/docker/nastools:/config 
      - /volume1/movie:/volume1/movie
      - /volume2/movie2:/volume2/movie2 
    environment: 
      - PUID=1027    
      - PGID=100   
      - UMASK=022 
      - NASTOOL_AUTO_UPDATE=false
    restart: always
    network_mode: host
    hostname: nas-tools
    
#   transmission:
#     image: linuxserver/transmission
#     # port is 9091
#     container_name: transmission1
#     privileged: true
#     network_mode: host
#     environment:
#       - PUID=1027
#       - PGID=101
#       - TZ=Asia/shanghai
#       - TRANSMISSION_WEB_HOME=/transmission-web-control/ #optional
#       - USER=xxxx #optional
#       - PASS=xxxx #optional
#  #     - WHITELIST=127.0.0.1,192.168.2.*,192.168.1.*,::1 #optional      
#       #- HOST_WHITELIST=dnsnane list #optional
#     volumes:
#       - /volume1/docker/transmission:/config
#       - /volume1/movie:/volume1/movie
#     restart: unless-stopped


  qbittorrent:
    image: linuxserver/qbittorrent
    network_mode: host
    container_name: qbittorrent1
    environment:
      - PUID=1027
      - PGID=100
      - TZ=Asia/Shanghai
      - WEBUI_PORT=8080
    volumes:
      - /volume1/docker/qbittorrent:/config
      - /volume1/movie:/volume1/movie
    restart: unless-stopped      
    # to enable remote webui,change the config foder:qBittorrent.conf  item: WebUI\HostHeaderValidation=false
    

  ombi:
    image: lscr.io/linuxserver/ombi
    network_mode: host
    container_name: ombi1
    # PORT IS 3579
    environment:
      - PUID=1027
      - PGID=100
      - TZ=Asia/Shanghai
      - BASE_URL=/ombi
      - HTTP_PROXY=127.0.0.1:8019
      - HTTPS_PROXY=127.0.0.1:8019
      - NO_PROXY=localhost,127.0.0.1
    volumes:
      - /volume1/docker/ombi:/config
    restart: unless-stopped


  nginx-proxy-manager:
    image: jlesage/nginx-proxy-manager
#    network_mode: bridge #设定默认桥接网络名bridge
    container_name: npm1
    restart: always
    volumes:
      - /volume1/docker/npm:/config
    ports:
      - "9080:8080"
      - "8181:8181"    #管理端口  
      - "4443:4443"    #https端口，利用路由的端口转发(socat转发v6地址到 192.168.2.100:4443)
    networks:
      mynet:
        ipv4_address: 172.18.0.5
      

networks:   #自定义网络
  mynet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.18.0.0/24"
    

